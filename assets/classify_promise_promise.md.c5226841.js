import{_ as s,c as n,o as a,a as l}from"./app.b66299c4.js";const b=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u56DE\u8C03\u51FD\u6570","slug":"\u56DE\u8C03\u51FD\u6570","link":"#\u56DE\u8C03\u51FD\u6570","children":[]},{"level":2,"title":"error","slug":"error","link":"#error","children":[]},{"level":2,"title":"Promise","slug":"promise","link":"#promise","children":[]},{"level":2,"title":"\u4E0Eajax\u914D\u548C\u4F7F\u7528","slug":"\u4E0Eajax\u914D\u548C\u4F7F\u7528","link":"#\u4E0Eajax\u914D\u548C\u4F7F\u7528","children":[]},{"level":2,"title":"\u62FC\u63A5\u8BF7\u6C42\u53C2\u6570","slug":"\u62FC\u63A5\u8BF7\u6C42\u53C2\u6570","link":"#\u62FC\u63A5\u8BF7\u6C42\u53C2\u6570","children":[]},{"level":2,"title":"Promise\u7684API","slug":"promise\u7684api","link":"#promise\u7684api","children":[]},{"level":2,"title":"then\u7684\u94FE\u5F0F\u8C03\u7528","slug":"then\u7684\u94FE\u5F0F\u8C03\u7528","link":"#then\u7684\u94FE\u5F0F\u8C03\u7528","children":[]},{"level":2,"title":"\u4E2D\u65ADPromise\u94FE","slug":"\u4E2D\u65ADpromise\u94FE","link":"#\u4E2D\u65ADpromise\u94FE","children":[]},{"level":2,"title":"\u9519\u8BEF\u7684\u7A7F\u900F","slug":"\u9519\u8BEF\u7684\u7A7F\u900F","link":"#\u9519\u8BEF\u7684\u7A7F\u900F","children":[]},{"level":2,"title":"async\u548Cawait","slug":"async\u548Cawait","link":"#async\u548Cawait","children":[]}],"relativePath":"classify/promise/promise.md","lastUpdated":null}'),p={name:"classify/promise/promise.md"},o=l(`<h2 id="\u56DE\u8C03\u51FD\u6570" tabindex="-1">\u56DE\u8C03\u51FD\u6570 <a class="header-anchor" href="#\u56DE\u8C03\u51FD\u6570" aria-hidden="true">#</a></h2><p>\u6211\u4EEC\u5B9A\u4E49\u7684\u6CA1\u6709\u8FDB\u884C\u8C03\u7528\uFF0C\u6700\u7EC8\u5374\u6267\u884C\u4E86\uFF0C\u5C31\u53EB\u56DE\u8C03\u51FD\u6570</p><blockquote><p>\u540C\u6B65\u56DE\u8C03</p></blockquote><p>\u6570\u7EC4\u904D\u5386\u76F8\u5173\u7684\u56DE\u8C03\u51FD\u6570/Promise\u7684executor\u51FD\u6570</p><blockquote><p>\u5F02\u6B65\u56DE\u8C03</p></blockquote><p>\u5B9A\u65F6\u5668\u3001ajax\u3001Promise\u6210\u529F\u548C\u662F\u5931\u8D25\u7684\u56DE\u8C03</p><h2 id="error" tabindex="-1">error <a class="header-anchor" href="#error" aria-hidden="true">#</a></h2><blockquote><p>\u6355\u83B7\u9519\u8BEF</p></blockquote><div class="language-js line-numbers-mode"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#8B949E;">// try\u653E\u53EF\u80FD\u51FA\u73B0\u9519\u8BEF\u7684\u4EE3\u7801\uFF0C\u4E00\u65E6\u51FA\u73B0\u9519\u8BEF\u7ACB\u5373\u505C\u6B62try\u4E2D\u4EE3\u7801\u6267\u884C\uFF0C\u8C03\u7528catch\uFF0C\u5E76\u643A\u5E26\u9519\u8BEF\u4FE1\u606F</span></span>
<span class="line"><span style="color:#FF7B72;">try</span><span style="color:#C9D1D9;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">}</span><span style="color:#FF7B72;">catch</span><span style="color:#C9D1D9;">(error){</span></span>
<span class="line"><span style="color:#C9D1D9;">	console.</span><span style="color:#D2A8FF;">log</span><span style="color:#C9D1D9;">(err)</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><blockquote><p>\u629B\u51FA\u9519\u8BEF</p></blockquote><div class="language-js line-numbers-mode"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#FF7B72;">throw</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">Error</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;\u9519\u8BEF\u5BF9\u8C61&#39;</span><span style="color:#C9D1D9;">)	</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><blockquote><p>\u9519\u8BEF\u5BF9\u8C61</p></blockquote><ol><li><p>message:\u9519\u8BEF\u76F8\u5173\u4FE1\u606F</p></li><li><p>stack\uFF1A\u8BB0\u5F55\u4FE1\u606F</p></li></ol><h2 id="promise" tabindex="-1">Promise <a class="header-anchor" href="#promise" aria-hidden="true">#</a></h2><blockquote><p>Promise\u7B80\u8FF0</p></blockquote><ol><li>Promise\u662FJS\u4E2D\u8FDB\u884C\u5F02\u6B65\u7F16\u7A0B\u7684\u65B0\u65B9\u6848\uFF08\u65E7\u7684\u662F\u7EAF\u56DE\u8C03\uFF09</li><li>Promise\u662F\u5185\u7F6E\u7684\u6784\u9020\u51FD\u6570</li><li>Promise\u7684\u5B9E\u4F8B\u5BF9\u8C61\u53EF\u4EE5\u7528\u6765\u5C01\u88C5\u4E00\u4E2A\u5F02\u6B65\u51FD\u6570\uFF0C\u8BF7\u53EF\u4EE5\u83B7\u53D6\u5176\u6210\u529F\u6216\u5931\u8D25\u7684\u503C</li></ol><blockquote><p>Promise\u7684\u57FA\u7840\u4F7F\u7528</p></blockquote><div class="language-js line-numbers-mode"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#8B949E;">// \u63A5\u6536executor\u56DE\u8C03\u51FD\u6570</span></span>
<span class="line"><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">p</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">Promise</span><span style="color:#C9D1D9;">((</span><span style="color:#FFA657;">resolve</span><span style="color:#C9D1D9;">,</span><span style="color:#FFA657;">reject</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#D2A8FF;">resolve</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;ok&#39;</span><span style="color:#C9D1D9;">), </span><span style="color:#8B949E;">// pending =&gt; fulfilled</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#D2A8FF;">reject</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;fail&#39;</span><span style="color:#C9D1D9;">) </span><span style="color:#8B949E;">// pending =&gt; rejected</span></span>
<span class="line"><span style="color:#C9D1D9;">})</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><blockquote><p>Promise\u7684\u4E09\u79CD\u72B6\u6001</p></blockquote><ol><li>\u521D\u59CB\u5316(<code>pending</code>) \u6210\u529F(<code>fulfilled</code>) \u5931\u8D25(<code>rejected</code>)</li><li>Promise\u72B6\u6001\u53EA\u80FD\u6539\u53D8\u6210\u4E00\u6B21:pending =&gt; fulfilled,pending =&gt; rejected</li></ol><h2 id="\u4E0Eajax\u914D\u548C\u4F7F\u7528" tabindex="-1">\u4E0Eajax\u914D\u548C\u4F7F\u7528 <a class="header-anchor" href="#\u4E0Eajax\u914D\u548C\u4F7F\u7528" aria-hidden="true">#</a></h2><blockquote><p>Promise\u53D1\u9001ajax\u8BF7\u6C42</p></blockquote><div class="language-js line-numbers-mode"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">p</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">Promise</span><span style="color:#C9D1D9;">((</span><span style="color:#FFA657;">resolve</span><span style="color:#C9D1D9;">, </span><span style="color:#FFA657;">reject</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#8B949E;">// \u521B\u5EFA\u4E00\u4E2Aajax\u8BF7\u6C42</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">xhr</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">XMLHttpRequest</span><span style="color:#C9D1D9;">()</span></span>
<span class="line"><span style="color:#C9D1D9;">    xhr.</span><span style="color:#D2A8FF;">onreadystatechange</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> () </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">if</span><span style="color:#C9D1D9;"> (xhr.readyState </span><span style="color:#FF7B72;">==</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">4</span><span style="color:#C9D1D9;">) {</span></span>
<span class="line"><span style="color:#C9D1D9;">            </span><span style="color:#FF7B72;">if</span><span style="color:#C9D1D9;"> (xhr.status </span><span style="color:#FF7B72;">==</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">200</span><span style="color:#C9D1D9;">) {</span></span>
<span class="line"><span style="color:#C9D1D9;">                </span><span style="color:#D2A8FF;">resolve</span><span style="color:#C9D1D9;">(xhr.response)</span></span>
<span class="line"><span style="color:#C9D1D9;">            } </span><span style="color:#FF7B72;">else</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">                </span><span style="color:#D2A8FF;">reject</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;\u8BF7\u6C42\u51FA\u9519&#39;</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">            }</span></span>
<span class="line"><span style="color:#C9D1D9;">        }</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"><span style="color:#C9D1D9;">    xhr.</span><span style="color:#D2A8FF;">open</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;GET&#39;</span><span style="color:#C9D1D9;">, </span><span style="color:#A5D6FF;">&#39;https://cbf5e09e-6228-46b3-b76d-98dc3c83e2cf.mock.pstmn.io/movie&#39;</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">    xhr.responseType </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;json&#39;</span></span>
<span class="line"><span style="color:#C9D1D9;">    xhr.</span><span style="color:#D2A8FF;">send</span><span style="color:#C9D1D9;">()</span></span>
<span class="line"><span style="color:#C9D1D9;">})</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><blockquote><p>Promise\u63A5\u6536\u54CD\u5E94\u6570\u636E</p></blockquote><div class="language-js line-numbers-mode"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#C9D1D9;">p.</span><span style="color:#D2A8FF;">then</span><span style="color:#C9D1D9;">((</span><span style="color:#FFA657;">result</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">    console.</span><span style="color:#D2A8FF;">log</span><span style="color:#C9D1D9;">(result);</span></span>
<span class="line"><span style="color:#C9D1D9;">}).</span><span style="color:#D2A8FF;">catch</span><span style="color:#C9D1D9;">((</span><span style="color:#FFA657;">err</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">    console.</span><span style="color:#D2A8FF;">log</span><span style="color:#C9D1D9;">(err);</span></span>
<span class="line"><span style="color:#C9D1D9;">});</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="\u62FC\u63A5\u8BF7\u6C42\u53C2\u6570" tabindex="-1">\u62FC\u63A5\u8BF7\u6C42\u53C2\u6570 <a class="header-anchor" href="#\u62FC\u63A5\u8BF7\u6C42\u53C2\u6570" aria-hidden="true">#</a></h2><div class="language-js line-numbers-mode"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#FF7B72;">let</span><span style="color:#C9D1D9;"> obj </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">    page: </span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">    content: </span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">    type: </span><span style="color:#A5D6FF;">&#39;movie&#39;</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF7B72;">let</span><span style="color:#C9D1D9;"> str </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;&#39;</span></span>
<span class="line"><span style="color:#FF7B72;">for</span><span style="color:#C9D1D9;"> (</span><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">key</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">in</span><span style="color:#C9D1D9;"> obj) {</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">if</span><span style="color:#C9D1D9;"> (Object.hasOwnProperty.</span><span style="color:#D2A8FF;">call</span><span style="color:#C9D1D9;">(obj, key)) {</span></span>
<span class="line"><span style="color:#C9D1D9;">        str </span><span style="color:#FF7B72;">+=</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">\`\${</span><span style="color:#C9D1D9;">key</span><span style="color:#A5D6FF;">}=\${</span><span style="color:#C9D1D9;">obj</span><span style="color:#A5D6FF;">[</span><span style="color:#C9D1D9;">key</span><span style="color:#A5D6FF;">]</span><span style="color:#A5D6FF;">}&amp;\`</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"><span style="color:#C9D1D9;">str.</span><span style="color:#D2A8FF;">slice</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">0</span><span style="color:#C9D1D9;">, </span><span style="color:#FF7B72;">-</span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">) </span><span style="color:#8B949E;">// page=1&amp;content=1&amp;type=movie</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="promise\u7684api" tabindex="-1">Promise\u7684API <a class="header-anchor" href="#promise\u7684api" aria-hidden="true">#</a></h2><div class="language-js line-numbers-mode"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">p</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">Promise</span><span style="color:#C9D1D9;">((</span><span style="color:#FFA657;">resolve</span><span style="color:#C9D1D9;">, </span><span style="color:#FFA657;">reject</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#D2A8FF;">setTimeout</span><span style="color:#C9D1D9;">(() </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#D2A8FF;">reject</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;fail&#39;</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#D2A8FF;">resolve</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;success&#39;</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">    }, </span><span style="color:#79C0FF;">1000</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"><span style="color:#C9D1D9;">})</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><blockquote><p>Promise.prototype.then\u65B9\u6CD5</p></blockquote><p>\u53C2\u6570:\u6210\u529F\u548C\u5931\u8D25\u7684\u56DE\u8C03\uFF0C\u5E76\u4E14\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684promise\u5B9E\u4F8B</p><div class="language-js line-numbers-mode"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#C9D1D9;">p.</span><span style="color:#D2A8FF;">then</span><span style="color:#C9D1D9;">(</span><span style="color:#FFA657;">result</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> console.</span><span style="color:#D2A8FF;">log</span><span style="color:#C9D1D9;">(result),</span><span style="color:#FFA657;">err</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> console.</span><span style="color:#D2A8FF;">log</span><span style="color:#C9D1D9;">(err))  </span></span>
<span class="line"><span style="color:#8B949E;">// fail</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><blockquote><p>Promise.prototype.catch\u65B9\u6CD5</p></blockquote><p>\u53C2\u6570\uFF1APromise\u5931\u8D25\u7684\u56DE\u8C03</p><div class="language-js line-numbers-mode"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#C9D1D9;">p.</span><span style="color:#D2A8FF;">catch</span><span style="color:#C9D1D9;">(</span><span style="color:#FFA657;">err</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> console.</span><span style="color:#D2A8FF;">log</span><span style="color:#C9D1D9;">(err))  </span></span>
<span class="line"><span style="color:#8B949E;">// fail</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><blockquote><p>Promise.resolve\u65B9\u6CD5</p></blockquote><ol><li>\u53C2\u6570:\u975EPromise\uFF0C\u8FD4\u56DE\u72B6\u6001\u4E3A\u6210\u529F\u7684\u56DE\u8C03</li><li>\u53C2\u6570:Promise\uFF0C\u8FD4\u56DE\u53C2\u6570Promise\u7684\u6210\u529F\u6216\u8005\u5931\u8D25\u56DE\u8C03</li></ol><div class="language-js line-numbers-mode"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">p1</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">Promise</span><span style="color:#C9D1D9;">.</span><span style="color:#D2A8FF;">resolve</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">p.</span><span style="color:#D2A8FF;">then</span><span style="color:#C9D1D9;">(</span><span style="color:#FFA657;">result</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> console.</span><span style="color:#D2A8FF;">log</span><span style="color:#C9D1D9;">(result).</span><span style="color:#D2A8FF;">catch</span><span style="color:#C9D1D9;">(</span><span style="color:#FFA657;">err</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> console.</span><span style="color:#D2A8FF;">log</span><span style="color:#C9D1D9;">(err)) </span><span style="color:#8B949E;">// 1</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-js line-numbers-mode"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">p1</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">Promise</span><span style="color:#C9D1D9;">.</span><span style="color:#D2A8FF;">resolve</span><span style="color:#C9D1D9;">(p)</span></span>
<span class="line"><span style="color:#C9D1D9;">p.</span><span style="color:#D2A8FF;">then</span><span style="color:#C9D1D9;">(</span><span style="color:#FFA657;">result</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> console.</span><span style="color:#D2A8FF;">log</span><span style="color:#C9D1D9;">(result),</span><span style="color:#FFA657;">err</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> console.</span><span style="color:#D2A8FF;">log</span><span style="color:#C9D1D9;">(err)) </span><span style="color:#8B949E;">// fail</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><blockquote><p>Promise.reject\u65B9\u6CD5</p></blockquote><ol><li>\u53C2\u6570:\u975EPromise\uFF0C\u8FD4\u56DE\u72B6\u6001\u4E3A\u5931\u8D25\u7684\u56DE\u8C03</li><li>\u53C2\u6570:Promise\uFF0C\u8FD4\u56DE\u53C2\u6570Promise\u7684\u6210\u529F\u6216\u8005\u5931\u8D25\u56DE\u8C03</li></ol><div class="language-js line-numbers-mode"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">p1</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">Promise</span><span style="color:#C9D1D9;">.</span><span style="color:#D2A8FF;">reject</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">p.</span><span style="color:#D2A8FF;">then</span><span style="color:#C9D1D9;">(</span><span style="color:#FFA657;">result</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> console.</span><span style="color:#D2A8FF;">log</span><span style="color:#C9D1D9;">(result),</span><span style="color:#FFA657;">err</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> console.</span><span style="color:#D2A8FF;">log</span><span style="color:#C9D1D9;">(err)) </span><span style="color:#8B949E;">// 1</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><blockquote><p>Promise.all\u65B9\u6CD5</p></blockquote><ol><li>\u53C2\u6570\uFF1APromise\u6570\u7EC4\uFF0C\u8FD4\u56DE\u4E00\u4E2APromise\u5B9E\u4F8B</li><li>Promise\u6570\u7EC4:pending =&gt; fulfilled \u8FD4\u56DE\u7684\u5B9E\u4F8B =&gt; \u6240\u6709\u7684fulfilled\u7ED3\u679C</li><li>Promise\u6570\u7EC4\u67D0\u4E00\u4E2A:pending =&gt; rejected \u8FD4\u56DE\u7684\u5B9E\u4F8B =&gt; rejected\u7684\u7ED3\u679C</li></ol><div class="language-js line-numbers-mode"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">p1</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">Promise</span><span style="color:#C9D1D9;">.</span><span style="color:#D2A8FF;">resolve</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;success1&#39;</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">p2</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">Promise</span><span style="color:#C9D1D9;">((</span><span style="color:#FFA657;">resolve</span><span style="color:#C9D1D9;">, </span><span style="color:#FFA657;">reject</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#D2A8FF;">setTimeout</span><span style="color:#C9D1D9;">(() </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#8B949E;">// reject(&#39;fail2&#39;)</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#D2A8FF;">resolve</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;success2&#39;</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">    }, </span><span style="color:#79C0FF;">1000</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"><span style="color:#C9D1D9;">})</span></span>
<span class="line"><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">p3</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">Promise</span><span style="color:#C9D1D9;">((</span><span style="color:#FFA657;">resolve</span><span style="color:#C9D1D9;">, </span><span style="color:#FFA657;">reject</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#D2A8FF;">setTimeout</span><span style="color:#C9D1D9;">(() </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#8B949E;">// reject(&#39;fail3&#39;)</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#D2A8FF;">resolve</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;success3&#39;</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">    }, </span><span style="color:#79C0FF;">2000</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"><span style="color:#C9D1D9;">})</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><div class="language-js line-numbers-mode"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">p</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">Promise</span><span style="color:#C9D1D9;">.</span><span style="color:#D2A8FF;">all</span><span style="color:#C9D1D9;">([p1, p2, p3])</span></span>
<span class="line"><span style="color:#C9D1D9;">p.</span><span style="color:#D2A8FF;">then</span><span style="color:#C9D1D9;">(</span><span style="color:#FFA657;">result</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> console.</span><span style="color:#D2A8FF;">log</span><span style="color:#C9D1D9;">(result), </span><span style="color:#FFA657;">err</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> console.</span><span style="color:#D2A8FF;">log</span><span style="color:#C9D1D9;">(err))</span></span>
<span class="line"><span style="color:#8B949E;">// [&#39;success1&#39;, &#39;success2&#39;, &#39;success3&#39;]</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-js line-numbers-mode"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#FF7B72;">...</span></span>
<span class="line"><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">p2</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">Promise</span><span style="color:#C9D1D9;">((</span><span style="color:#FFA657;">resolve</span><span style="color:#C9D1D9;">, </span><span style="color:#FFA657;">reject</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#D2A8FF;">setTimeout</span><span style="color:#C9D1D9;">(() </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#D2A8FF;">reject</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;fail2&#39;</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#8B949E;">// resolve(&#39;success2&#39;)</span></span>
<span class="line"><span style="color:#C9D1D9;">    }, </span><span style="color:#79C0FF;">1000</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"><span style="color:#C9D1D9;">})</span></span>
<span class="line"><span style="color:#FF7B72;">...</span></span>
<span class="line"><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">p</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">Promise</span><span style="color:#C9D1D9;">.</span><span style="color:#D2A8FF;">all</span><span style="color:#C9D1D9;">([p1, p2, p3])</span></span>
<span class="line"><span style="color:#C9D1D9;">p.</span><span style="color:#D2A8FF;">then</span><span style="color:#C9D1D9;">(</span><span style="color:#FFA657;">result</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> console.</span><span style="color:#D2A8FF;">log</span><span style="color:#C9D1D9;">(result), </span><span style="color:#FFA657;">err</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> console.</span><span style="color:#D2A8FF;">log</span><span style="color:#C9D1D9;">(err))</span></span>
<span class="line"><span style="color:#8B949E;">// fail2</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><blockquote><p>Promise.race\u65B9\u6CD5</p></blockquote><ol><li>\u53C2\u6570\uFF1APromise\u6570\u7EC4\uFF0C\u8FD4\u56DE\u4E00\u4E2APromise\u5B9E\u4F8B</li><li>Promise\u6570\u7EC4\u4E2D\u6700\u5FEB\u6539\u53D8\u72B6\u6001\u7684\u5B9E\u4F8B\uFF0C\u8FD4\u56DE\u7684Promise\u5B9E\u4F8B\u5C31\u662F\u5B83\u7684\u7ED3\u679C</li></ol><div class="language-js line-numbers-mode"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">p</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">Promise</span><span style="color:#C9D1D9;">.</span><span style="color:#D2A8FF;">race</span><span style="color:#C9D1D9;">([p1, p2, p3])</span></span>
<span class="line"><span style="color:#C9D1D9;">p.</span><span style="color:#D2A8FF;">then</span><span style="color:#C9D1D9;">(</span><span style="color:#FFA657;">result</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> console.</span><span style="color:#D2A8FF;">log</span><span style="color:#C9D1D9;">(result), </span><span style="color:#FFA657;">err</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> console.</span><span style="color:#D2A8FF;">log</span><span style="color:#C9D1D9;">(err))</span></span>
<span class="line"><span style="color:#8B949E;">// success1</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="then\u7684\u94FE\u5F0F\u8C03\u7528" tabindex="-1">then\u7684\u94FE\u5F0F\u8C03\u7528 <a class="header-anchor" href="#then\u7684\u94FE\u5F0F\u8C03\u7528" aria-hidden="true">#</a></h2><ol><li>then\u7684return\u662F\u975EPromise\uFF0C\u90A3\u4E48then\u8FD4\u56DE\u7684\u4E0B\u4E00\u4E2APromise\u5B9E\u4F8B\u7684\u72B6\u6001\u4E3Afulfilled</li><li>then\u7684return\u662F\u629B\u51FA\u5F02\u5E38\uFF0C\u90A3\u4E48then\u8FD4\u56DE\u7684\u4E0B\u4E00\u4E2APromise\u7684\u72B6\u6001\u5C31\u662Frejected</li></ol><div class="language-js line-numbers-mode"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">p</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">Promise</span><span style="color:#C9D1D9;">((</span><span style="color:#FFA657;">resolve</span><span style="color:#C9D1D9;">,</span><span style="color:#FFA657;">reject</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#D2A8FF;">reject</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;fail&#39;</span><span style="color:#C9D1D9;">) </span><span style="color:#8B949E;">// pending =&gt; rejected</span></span>
<span class="line"><span style="color:#C9D1D9;">})</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><blockquote><p>then\u7684\u94FE\u5F0F\u8C03\u7528\uFF0C\u8FD4\u56DE\u503C\u662F\u65B0\u7684Promise\u5B9E\u4F8B</p></blockquote><div class="language-js line-numbers-mode"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#C9D1D9;">p.</span><span style="color:#D2A8FF;">then</span><span style="color:#C9D1D9;">(</span><span style="color:#FFA657;">result</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> { console.</span><span style="color:#D2A8FF;">log</span><span style="color:#C9D1D9;">(result); </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;success&#39;</span><span style="color:#C9D1D9;"> }, </span><span style="color:#FFA657;">err</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> { console.</span><span style="color:#D2A8FF;">log</span><span style="color:#C9D1D9;">(err); </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">Promise</span><span style="color:#C9D1D9;">.</span><span style="color:#D2A8FF;">reject</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">false</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">}).</span><span style="color:#D2A8FF;">then</span><span style="color:#C9D1D9;">(</span><span style="color:#FFA657;">result</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> { console.</span><span style="color:#D2A8FF;">log</span><span style="color:#C9D1D9;">(result); </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">true</span><span style="color:#C9D1D9;"> }, </span><span style="color:#FFA657;">err</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">    console.</span><span style="color:#D2A8FF;">log</span><span style="color:#C9D1D9;">(err); </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">100</span></span>
<span class="line"><span style="color:#C9D1D9;">}).</span><span style="color:#D2A8FF;">then</span><span style="color:#C9D1D9;">(</span><span style="color:#FFA657;">result</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> { console.</span><span style="color:#D2A8FF;">log</span><span style="color:#C9D1D9;">(result); </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">300</span></span>
<span class="line"><span style="color:#C9D1D9;">}).</span><span style="color:#D2A8FF;">then</span><span style="color:#C9D1D9;">(</span><span style="color:#FFA657;">result</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> { console.</span><span style="color:#D2A8FF;">log</span><span style="color:#C9D1D9;">(result) }, </span><span style="color:#FFA657;">err</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> console.</span><span style="color:#D2A8FF;">log</span><span style="color:#C9D1D9;">(err))</span></span>
<span class="line"><span style="color:#8B949E;">// fail false 100 300</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="\u4E2D\u65ADpromise\u94FE" tabindex="-1">\u4E2D\u65ADPromise\u94FE <a class="header-anchor" href="#\u4E2D\u65ADpromise\u94FE" aria-hidden="true">#</a></h2><p>then()\u8FD4\u56DE\u4E00\u4E2Apending\u72B6\u6001\u7684Promise\u5B9E\u4F8B</p><h2 id="\u9519\u8BEF\u7684\u7A7F\u900F" tabindex="-1">\u9519\u8BEF\u7684\u7A7F\u900F <a class="header-anchor" href="#\u9519\u8BEF\u7684\u7A7F\u900F" aria-hidden="true">#</a></h2><p>catch\u6700\u7EC8\u6355\u83B7</p><div class="language-js line-numbers-mode"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#C9D1D9;">p.</span><span style="color:#D2A8FF;">then</span><span style="color:#C9D1D9;">((</span><span style="color:#FFA657;">result</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">    console.</span><span style="color:#D2A8FF;">log</span><span style="color:#C9D1D9;">(result);</span></span>
<span class="line"><span style="color:#C9D1D9;">}).</span><span style="color:#D2A8FF;">catch</span><span style="color:#C9D1D9;">((</span><span style="color:#FFA657;">err</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">    console.</span><span style="color:#D2A8FF;">log</span><span style="color:#C9D1D9;">(err);</span></span>
<span class="line"><span style="color:#C9D1D9;">})</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="async\u548Cawait" tabindex="-1">async\u548Cawait <a class="header-anchor" href="#async\u548Cawait" aria-hidden="true">#</a></h2><blockquote><p>\u57FA\u672C\u4F7F\u7528</p></blockquote><div class="language-js line-numbers-mode"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#FF7B72;">let</span><span style="color:#C9D1D9;"> p1 </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">Promise</span><span style="color:#C9D1D9;">((</span><span style="color:#FFA657;">resolve</span><span style="color:#C9D1D9;">, </span><span style="color:#FFA657;">reject</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#D2A8FF;">resolve</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;success1&#39;</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">})</span></span>
<span class="line"><span style="color:#FF7B72;">let</span><span style="color:#C9D1D9;"> p2 </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">Promise</span><span style="color:#C9D1D9;">((</span><span style="color:#FFA657;">resolve</span><span style="color:#C9D1D9;">, </span><span style="color:#FFA657;">reject</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#D2A8FF;">setTimeout</span><span style="color:#C9D1D9;">(() </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#D2A8FF;">reject</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;fail2&#39;</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">    }, </span><span style="color:#79C0FF;">1000</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"><span style="color:#C9D1D9;">})</span></span>
<span class="line"><span style="color:#FF7B72;">let</span><span style="color:#C9D1D9;"> p3 </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">Promise</span><span style="color:#C9D1D9;">((</span><span style="color:#FFA657;">resolve</span><span style="color:#C9D1D9;">, </span><span style="color:#FFA657;">reject</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#D2A8FF;">setTimeout</span><span style="color:#C9D1D9;">(() </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#D2A8FF;">resolve</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&#39;success3&#39;</span><span style="color:#C9D1D9;">)</span></span>
<span class="line"><span style="color:#C9D1D9;">    }, </span><span style="color:#79C0FF;">2000</span><span style="color:#C9D1D9;">);</span></span>
<span class="line"><span style="color:#C9D1D9;">});</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><ol><li><p>async\u4FEE\u9970\u51FD\u6570</p></li><li><p>await\u4FEE\u9970Promise\u5B9E\u4F8B\u5BF9\u8C61\uFF0C\u5E76\u4E14\u53EA\u80FD\u83B7\u53D6\u6210\u529F\u7684\u503C</p></li><li><p>await\u4FEE\u9970\u7684\u5B9E\u4F8B\u5BF9\u8C61\u5982\u679C\u662F\u5931\u8D25\u72B6\u6001\uFF0C\u5219\u9700\u8981try..catch\u6355\u83B7\u6253\u5370\uFF0C\u5426\u5219\u4E0D\u4F1A\u6267\u884C\u540E\u9762\u7684\u4EE3\u7801</p><div class="language-js line-numbers-mode"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#C9D1D9;">(</span><span style="color:#FF7B72;">async</span><span style="color:#C9D1D9;"> () </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">try</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">result1</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">await</span><span style="color:#C9D1D9;"> p1</span></span>
<span class="line"><span style="color:#C9D1D9;">        console.</span><span style="color:#D2A8FF;">log</span><span style="color:#C9D1D9;">(result1); </span><span style="color:#8B949E;">// success1</span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">result2</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">await</span><span style="color:#C9D1D9;"> p2</span></span>
<span class="line"><span style="color:#C9D1D9;">        console.</span><span style="color:#D2A8FF;">log</span><span style="color:#C9D1D9;">(result2); </span></span>
<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">result3</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">await</span><span style="color:#C9D1D9;"> p3</span></span>
<span class="line"><span style="color:#C9D1D9;">        console.</span><span style="color:#D2A8FF;">log</span><span style="color:#C9D1D9;">(result3); </span></span>
<span class="line"><span style="color:#C9D1D9;">    } </span><span style="color:#FF7B72;">catch</span><span style="color:#C9D1D9;"> (error) {</span></span>
<span class="line"><span style="color:#C9D1D9;">        console.</span><span style="color:#D2A8FF;">log</span><span style="color:#C9D1D9;">(error); </span><span style="color:#8B949E;">// fail2</span></span>
<span class="line"><span style="color:#C9D1D9;">    }</span></span>
<span class="line"><span style="color:#C9D1D9;">})()</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div></li></ol><blockquote><p>async</p></blockquote><p>\u4FEE\u9970\u7684\u51FD\u6570\u8FD4\u56DE\u503C\u662FPromise\u5B9E\u4F8B\u6210\u529F\u7684\u503C</p><blockquote><p>await</p></blockquote><ol><li>\u5982\u679C\u4FEE\u9970Promise\u5B9E\u4F8B\uFF0C\u8FD4\u56DE\u503C\u5219\u662FPromise\u5B9E\u4F8B\u6210\u529F\u7684\u503C</li><li>\u5982\u679C\u662F\u975EPromise\u5B9E\u4F8B\uFF0C\u6B64\u503C\u4E3Aawait\u7684\u8FD4\u56DE\u503C</li></ol>`,68),e=[o];function r(c,t,D,y,i,F){return a(),n("div",null,e)}const u=s(p,[["render",r]]);export{b as __pageData,u as default};
