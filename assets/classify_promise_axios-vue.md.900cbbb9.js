import{_ as s,c as n,o as a,a as l}from"./app.b66299c4.js";const b=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"Vue\u5BF9axios\u7684\u4E8C\u6B21\u5C01\u88C5","slug":"vue\u5BF9axios\u7684\u4E8C\u6B21\u5C01\u88C5","link":"#vue\u5BF9axios\u7684\u4E8C\u6B21\u5C01\u88C5","children":[]}],"relativePath":"classify/promise/axios-vue.md","lastUpdated":null}'),p={name:"classify/promise/axios-vue.md"},e=l(`<h2 id="vue\u5BF9axios\u7684\u4E8C\u6B21\u5C01\u88C5" tabindex="-1">Vue\u5BF9axios\u7684\u4E8C\u6B21\u5C01\u88C5 <a class="header-anchor" href="#vue\u5BF9axios\u7684\u4E8C\u6B21\u5C01\u88C5" aria-hidden="true">#</a></h2><blockquote><p>axios\u8BF7\u6C42\u62E6\u622A\u5668</p></blockquote><ul><li>\u5BF9\u6240\u6709\u8BF7\u6C42\u505A\u7EDF\u4E00\u5904\u7406 =&gt; \u8FFD\u52A0\u8BF7\u6C42\u5934\u3001\u8FFD\u52A0\u53C2\u6570\u3001\u754C\u9762loading\u63D0\u793A</li><li>service.interceptors.request.use(config =&gt; config,err =&gt; ...)</li></ul><blockquote><p>axios\u54CD\u5E94\u62E6\u622A\u5668</p></blockquote><ul><li>\u82E5\u8BF7\u6C42\u6210\u529F,\u5BF9\u6210\u529F\u7684\u6570\u636E\u505A\u8FDB\u4E00\u6B65\u5904\u7406;\u82E5\u5931\u8D25\uFF0C\u5BF9\u5931\u8D25\u8FDB\u884C\u7EDF\u4E00\u5904\u7406</li><li>service.interceptors.response.use(res =&gt; res,err =&gt; ...)</li></ul><blockquote><p>axios</p></blockquote><div class="language-tsx line-numbers-mode"><button class="copy"></button><span class="lang">tsx</span><pre><code><span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> axios, {AxiosInstance, AxiosError, AxiosResponse, AxiosRequestConfig} </span><span style="color:#FF7B72;">from</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;axios&#39;</span><span style="color:#C9D1D9;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">service</span><span style="color:#FF7B72;">:</span><span style="color:#FFA657;">AxiosInstance</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> axios.</span><span style="color:#D2A8FF;">create</span><span style="color:#C9D1D9;">({</span></span>
<span class="line"><span style="color:#C9D1D9;">    timeout:</span><span style="color:#A5D6FF;">&#39;5000&#39;</span></span>
<span class="line"><span style="color:#C9D1D9;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">service.interceptors.request.</span><span style="color:#D2A8FF;">use</span><span style="color:#C9D1D9;">((</span><span style="color:#FFA657;">config</span><span style="color:#FF7B72;">:</span><span style="color:#FFA657;">AxiosRequestConfig</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> config</span></span>
<span class="line"><span style="color:#C9D1D9;">},(</span><span style="color:#FFA657;">err</span><span style="color:#FF7B72;">:</span><span style="color:#FFA657;">AxiosError</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">    console.</span><span style="color:#D2A8FF;">log</span><span style="color:#C9D1D9;">(err);</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">Promise</span><span style="color:#C9D1D9;">.</span><span style="color:#D2A8FF;">reject</span><span style="color:#C9D1D9;">()</span></span>
<span class="line"><span style="color:#C9D1D9;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C9D1D9;">service.interceptors.response.</span><span style="color:#D2A8FF;">use</span><span style="color:#C9D1D9;">((</span><span style="color:#FFA657;">response</span><span style="color:#FF7B72;">:</span><span style="color:#FFA657;">AxiosResponse</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> response</span></span>
<span class="line"><span style="color:#C9D1D9;">},(</span><span style="color:#FFA657;">err</span><span style="color:#FF7B72;">:</span><span style="color:#FFA657;">AxiosError</span><span style="color:#C9D1D9;">) </span><span style="color:#FF7B72;">=&gt;</span><span style="color:#C9D1D9;"> {</span></span>
<span class="line"><span style="color:#C9D1D9;">    console.</span><span style="color:#D2A8FF;">log</span><span style="color:#C9D1D9;">(err);</span></span>
<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">return</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">new</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">Promise</span><span style="color:#C9D1D9;">.</span><span style="color:#D2A8FF;">reject</span><span style="color:#C9D1D9;">()</span></span>
<span class="line"><span style="color:#C9D1D9;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF7B72;">export</span><span style="color:#FFA657;"> </span><span style="color:#FF7B72;">default</span><span style="color:#FFA657;"> </span><span style="color:#C9D1D9;">service</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div>`,7),o=[e];function r(c,t,i,D,y,F){return a(),n("div",null,o)}const C=s(p,[["render",r]]);export{b as __pageData,C as default};
